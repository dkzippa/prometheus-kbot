name: kbot-cicd

env:
  REGISTRY: ghcr.io
  APP: "prometheus-kbot"

on:
  push:
    branches:
    # - develop
    - test-gcp-auth


jobs:

  encrypt_secret_TELE_TOKEN:

    name: gcp-auth-with-workload-federation
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      packages: write
      id-token: 'write'

    steps:

    # - uses: 'actions/checkout@v4'
    #   with:
    #     fetch-depth: 0

    # - name: base64_TELE_TOKEN
    #   run: TELE_TOKEN=$(echo -n "${{env.TELE_TOKEN}}" | base64 )

    # - uses: mikefarah/yq@master
    #   with:
    #     cmd: yq -i -v '.data.token=strenv(TELE_TOKEN)' ./helm/templates/secret.yaml

    # - name: check_teletoken
    #   run: cat ./helm/templates/secret.yaml

    - uses: 'google-github-actions/auth@v2'
      with:
        project_id: 'prometheus-407701'
        create_credentials_file: 'true'
        workload_identity_provider: 'projects/92496117895/locations/global/workloadIdentityPools/prometheus-kbot-github/providers/prometheus-kbot-github-provider2'
        service_account: 'kustomize-controller@prometheus-407701.iam.gserviceaccount.com'
        export_environment_variables: true

    - id: 'gcloud'
      name: 'gcloud'
      run: |-
        gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
        gcloud services list



    # - uses: nhedger/setup-sops@v2
    # - name: SOPS
    #   run: sops -e -gcp-kms projects/prometheus-407701/locations/global/keyRings/kbot-sops-flux/cryptoKeys/kbot-sops-key-flux --encrypted-regex '^(token)$' ./helm/templates/secret.yaml > ./helm/templates/secret-enc.yaml

    # - name: check_teletoken
    #   run: rm ./helm/templates/secret.yaml

    # - name: push
    #   run: cat ./helm/templates/secret-enc.yaml





  # ci:
  #   name: CI
  #   runs-on: ubuntu-latest
  #   # permissions:
  #   #   contents: read
  #   #   packages: write

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: make-test
  #       run: make test

  #     - name: ghcr-login
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

  #     - name: make-build-push
  #       env:
  #         REGISTRY: ${{ env.REGISTRY }}
  #         APP: ${{ env.APP }}
  #         TARGETARCH: amd64
  #         TARGETOS: linux
  #       run: make image push REGISTRY=${{env.REGISTRY}}/${{ github.actor }} APP=${{ env.APP }}

  #     - name: make-clean
  #       run: make clean

  # cd:
  #   name: CD
  #   runs-on: ubuntu-latest

  #   needs:
  #     - ci

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

  #     - uses: mikefarah/yq@master
  #       with:
  #         cmd: yq -i '.image.tag=strenv(VERSION)' ./helm/values.yaml

  #     - run: |
  #         git config user.name github-actions
  #         git config user.email github-actions@github.com
  #         git commit -am "bump version in helm values to $VERSION"
  #         git push



